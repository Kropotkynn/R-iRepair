# =====================================================
# Docker Compose - R iRepair Architecture Simple
# =====================================================
# Configuration sans backend Node.js séparé
# Le frontend Next.js gère les API routes

version: '3.8'

services:
  # ===== Base de Données PostgreSQL =====
  postgres:
    image: postgres:15-alpine
    container_name: rirepair-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-rirepair}
      POSTGRES_USER: ${DB_USER:-rirepair_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-rirepair_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    networks:
      - rirepair-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-rirepair_user} -d ${DB_NAME:-rirepair}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===== Cache Redis =====
  redis:
    image: redis:7-alpine
    container_name: rirepair-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - rirepair-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # ===== Frontend Next.js (avec API routes intégrées) =====
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rirepair-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      
      # Base de données
      DATABASE_URL: postgresql://${DB_USER:-rirepair_user}:${DB_PASSWORD:-rirepair_password}@postgres:5432/${DB_NAME:-rirepair}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-rirepair_user}
      DB_PASSWORD: ${DB_PASSWORD:-rirepair_password}
      DB_NAME: ${DB_NAME:-rirepair}
      
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_password}
      
      # NextAuth
      NEXTAUTH_SECRET: ${JWT_SECRET:-your-secret-key-change-this}
      NEXTAUTH_URL: ${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}
      
      # URLs publiques
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3000/api}
      NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}
      
      # Email SMTP
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM:-noreply@rirepair.com}
      
      # Features
      NEXT_PUBLIC_ENABLE_NOTIFICATIONS: ${NEXT_PUBLIC_ENABLE_NOTIFICATIONS:-true}
      NEXT_PUBLIC_ENABLE_LIVE_CHAT: ${NEXT_PUBLIC_ENABLE_LIVE_CHAT:-false}
      
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rirepair-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===== Reverse Proxy Nginx =====
  nginx:
    image: nginx:alpine
    container_name: rirepair-nginx
    restart: unless-stopped
    volumes:
      - ./nginx.simple.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - rirepair-network
    depends_on:
      - frontend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# =====================================================
# Volumes Persistants
# =====================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# =====================================================
# Réseau
# =====================================================
networks:
  rirepair-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
