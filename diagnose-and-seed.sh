#!/bin/bash

# =====================================================
# Script de Diagnostic et Insertion des Donn√©es
# =====================================================

set -e

echo "üîç Diagnostic de la base de donn√©es..."

# V√©rifier la connexion √† PostgreSQL
echo ""
echo "1Ô∏è‚É£ Test de connexion PostgreSQL..."
docker-compose exec -T postgres pg_isready -U rirepair_user -d rirepair

# V√©rifier les tables
echo ""
echo "2Ô∏è‚É£ Liste des tables:"
docker-compose exec -T postgres psql -U rirepair_user -d rirepair -c "\dt"

# Compter les donn√©es dans chaque table
echo ""
echo "3Ô∏è‚É£ Comptage des donn√©es:"

echo "Types d'appareils:"
docker-compose exec -T postgres psql -U rirepair_user -d rirepair -c "SELECT COUNT(*) as count FROM device_types;"

echo "Marques:"
docker-compose exec -T postgres psql -U rirepair_user -d rirepair -c "SELECT COUNT(*) as count FROM brands;"

echo "Mod√®les:"
docker-compose exec -T postgres psql -U rirepair_user -d rirepair -c "SELECT COUNT(*) as count FROM models;"

echo "Services de r√©paration:"
docker-compose exec -T postgres psql -U rirepair_user -d rirepair -c "SELECT COUNT(*) as count FROM repair_services;"

echo "Utilisateurs:"
docker-compose exec -T postgres psql -U rirepair_user -d rirepair -c "SELECT COUNT(*) as count FROM users;"

echo "Horaires:"
docker-compose exec -T postgres psql -U rirepair_user -d rirepair -c "SELECT COUNT(*) as count FROM schedule_slots;"

# Si les tables sont vides, ins√©rer les donn√©es
echo ""
echo "4Ô∏è‚É£ V√©rification si les donn√©es doivent √™tre ins√©r√©es..."

DEVICE_COUNT=$(docker-compose exec -T postgres psql -U rirepair_user -d rirepair -t -c "SELECT COUNT(*) FROM device_types;" | tr -d ' ')

if [ "$DEVICE_COUNT" -eq "0" ]; then
    echo "‚ö†Ô∏è  Base de donn√©es vide. Insertion des donn√©es..."
    
    # V√©rifier si le fichier seeds.sql existe
    if [ -f "database/seeds.sql" ]; then
        echo "üìä Insertion des donn√©es depuis database/seeds.sql..."
        docker-compose exec -T postgres psql -U rirepair_user -d rirepair < database/seeds.sql
        echo "‚úÖ Donn√©es ins√©r√©es avec succ√®s!"
    else
        echo "‚ùå Fichier database/seeds.sql introuvable!"
        exit 1
    fi
else
    echo "‚úÖ Base de donn√©es d√©j√† remplie ($DEVICE_COUNT types d'appareils)"
fi

# V√©rifier √† nouveau les donn√©es
echo ""
echo "5Ô∏è‚É£ V√©rification finale:"

echo "Types d'appareils:"
docker-compose exec -T postgres psql -U rirepair_user -d rirepair -c "SELECT id, name, icon FROM device_types LIMIT 5;"

echo ""
echo "Marques:"
docker-compose exec -T postgres psql -U rirepair_user -d rirepair -c "SELECT id, name FROM brands LIMIT 5;"

echo ""
echo "Utilisateur admin:"
docker-compose exec -T postgres psql -U rirepair_user -d rirepair -c "SELECT username, email FROM users WHERE username = 'admin';"

# Tester l'API
echo ""
echo "6Ô∏è‚É£ Test de l'API:"
echo "GET /api/devices/types"
curl -s http://localhost:3000/api/devices/types | head -c 200
echo ""

echo ""
echo "‚úÖ Diagnostic termin√©!"
echo ""
echo "üåê Acc√®s √† l'application:"
echo "   - Frontend: http://localhost:3000"
echo "   - Admin: http://localhost:3000/admin/login"
echo "   - Credentials: admin / admin123"
