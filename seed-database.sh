#!/bin/bash

# =====================================================
# Script de Pr√©remplissage de la Base de Donn√©es
# R iRepair - Donn√©es de Test
# =====================================================

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

clear
echo -e "${CYAN}"
cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                   ‚ïë
‚ïë     üå± Pr√©remplissage Base de Donn√©es üå±         ‚ïë
‚ïë                                                   ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"
echo ""

log_info "Ce script va remplir la base de donn√©es avec des donn√©es de test"
echo ""

# V√©rifier si Docker est en cours d'ex√©cution
if ! docker ps &> /dev/null; then
    log_error "Docker n'est pas en cours d'ex√©cution"
    exit 1
fi

# V√©rifier si le conteneur PostgreSQL existe
if ! docker ps | grep -q "rirepair-postgres"; then
    log_error "Le conteneur PostgreSQL n'est pas en cours d'ex√©cution"
    log_info "D√©marrez d'abord les services: docker-compose -f docker-compose.simple.yml up -d"
    exit 1
fi

log_success "Conteneur PostgreSQL trouv√©"
echo ""

# Demander confirmation
log_warning "‚ö†Ô∏è  ATTENTION: Cette op√©ration va ajouter des donn√©es de test √† la base de donn√©es"
echo ""
read -p "Voulez-vous continuer? (o/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Oo]$ ]]; then
    log_info "Op√©ration annul√©e"
    exit 0
fi

echo ""
log_info "Pr√©remplissage de la base de donn√©es..."
echo ""

# Ex√©cuter le script SQL
docker exec -i rirepair-postgres psql -U rirepair_user -d rirepair < database/seed-data.sql

if [ $? -eq 0 ]; then
    echo ""
    log_success "‚ú® Base de donn√©es pr√©remplie avec succ√®s !"
    echo ""
    
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${CYAN}üìä Donn√©es ajout√©es:${NC}"
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    
    # Afficher les statistiques
    docker exec -i rirepair-postgres psql -U rirepair_user -d rirepair -c "
    SELECT 
      'Cat√©gories de services' as \"Type de donn√©es\", 
      COUNT(*)::text as \"Nombre\" 
    FROM service_categories
    UNION ALL
    SELECT 'Types d''appareils', COUNT(*)::text FROM device_types
    UNION ALL
    SELECT 'Marques', COUNT(*)::text FROM device_brands
    UNION ALL
    SELECT 'Mod√®les d''appareils', COUNT(*)::text FROM device_models
    UNION ALL
    SELECT 'Services disponibles', COUNT(*)::text FROM model_services
    UNION ALL
    SELECT 'Rendez-vous', COUNT(*)::text FROM appointments
    UNION ALL
    SELECT 'Horaires d''ouverture', COUNT(*)::text FROM business_hours;
    "
    
    echo ""
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${CYAN}üì± Exemples de donn√©es:${NC}"
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    echo -e "${GREEN}Cat√©gories:${NC}"
    echo "  ‚Ä¢ R√©paration √âcran"
    echo "  ‚Ä¢ Batterie"
    echo "  ‚Ä¢ Connectique"
    echo "  ‚Ä¢ Cam√©ra"
    echo "  ‚Ä¢ Audio"
    echo "  ‚Ä¢ Logiciel"
    echo "  ‚Ä¢ D√©g√¢ts des eaux"
    echo "  ‚Ä¢ Vitre arri√®re"
    echo ""
    echo -e "${GREEN}Marques populaires:${NC}"
    echo "  ‚Ä¢ Apple (iPhone, iPad, MacBook)"
    echo "  ‚Ä¢ Samsung (Galaxy)"
    echo "  ‚Ä¢ Huawei, Xiaomi, OnePlus"
    echo "  ‚Ä¢ Dell, HP, Lenovo, Asus"
    echo "  ‚Ä¢ Sony, Microsoft, Nintendo"
    echo ""
    echo -e "${GREEN}Mod√®les iPhone:${NC}"
    echo "  ‚Ä¢ iPhone 15 Pro Max"
    echo "  ‚Ä¢ iPhone 14 Pro"
    echo "  ‚Ä¢ iPhone 13"
    echo "  ‚Ä¢ iPhone 12, 11..."
    echo ""
    echo -e "${GREEN}Rendez-vous de test:${NC}"
    echo "  ‚Ä¢ 8 rendez-vous cr√©√©s"
    echo "  ‚Ä¢ Statuts: pending, confirmed, completed"
    echo "  ‚Ä¢ Dates: pass√©es et futures"
    echo ""
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${CYAN}üéØ Prochaines √©tapes:${NC}"
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    echo "1. Acc√©dez √† l'interface admin:"
    echo -e "   ${GREEN}http://13.62.55.143:3000/admin/login${NC}"
    echo ""
    echo "2. Connectez-vous avec:"
    echo -e "   Username: ${YELLOW}admin${NC}"
    echo -e "   Password: ${YELLOW}admin123${NC}"
    echo ""
    echo "3. Explorez les donn√©es:"
    echo "   ‚Ä¢ Tableau de bord: statistiques"
    echo "   ‚Ä¢ Rendez-vous: liste des RDV"
    echo "   ‚Ä¢ Calendrier: vue calendrier"
    echo "   ‚Ä¢ Cat√©gories: gestion des services"
    echo ""
    echo "4. Testez la prise de rendez-vous:"
    echo -e "   ${GREEN}http://13.62.55.143:3000/booking${NC}"
    echo ""
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    
else
    echo ""
    log_error "Erreur lors du pr√©remplissage de la base de donn√©es"
    log_info "V√©rifiez les logs pour plus de d√©tails"
    exit 1
fi

echo ""
log_success "üéâ Pr√©remplissage termin√© avec succ√®s !"
echo ""
