#!/bin/bash

# =====================================================
# Script de Pr√©remplissage Adapt√© au Sch√©ma Existant
# R iRepair - Donn√©es de Test
# =====================================================

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

clear
echo -e "${CYAN}"
cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                   ‚ïë
‚ïë     üå± Pr√©remplissage Base de Donn√©es üå±         ‚ïë
‚ïë          (Adapt√© au sch√©ma existant)             ‚ïë
‚ïë                                                   ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"
echo ""

log_info "Ce script va remplir la base de donn√©es avec des donn√©es de test"
echo ""

# V√©rifier si Docker est en cours d'ex√©cution
if ! docker ps &> /dev/null; then
    log_error "Docker n'est pas en cours d'ex√©cution"
    exit 1
fi

# V√©rifier si le conteneur PostgreSQL existe
if ! docker ps | grep -q "rirepair-postgres"; then
    log_error "Le conteneur PostgreSQL n'est pas en cours d'ex√©cution"
    log_info "D√©marrez d'abord les services: docker-compose -f docker-compose.simple.yml up -d"
    exit 1
fi

log_success "Conteneur PostgreSQL trouv√©"
echo ""

# V√©rifier si le sch√©ma existe
log_info "V√©rification du sch√©ma de base de donn√©es..."
SCHEMA_CHECK=$(docker exec rirepair-postgres psql -U rirepair_user -d rirepair -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_name = 'device_types';")

if [ "$SCHEMA_CHECK" -eq "0" ]; then
    log_warning "Le sch√©ma de base de donn√©es n'existe pas encore"
    log_info "Cr√©ation du sch√©ma..."
    
    if [ -f "database/schema.sql" ]; then
        docker exec -i rirepair-postgres psql -U rirepair_user -d rirepair < database/schema.sql
        if [ $? -eq 0 ]; then
            log_success "Sch√©ma cr√©√© avec succ√®s"
        else
            log_error "Erreur lors de la cr√©ation du sch√©ma"
            exit 1
        fi
    else
        log_error "Fichier database/schema.sql introuvable"
        exit 1
    fi
fi

echo ""

# Demander confirmation
log_warning "‚ö†Ô∏è  ATTENTION: Cette op√©ration va ajouter des donn√©es de test √† la base de donn√©es"
echo ""
read -p "Voulez-vous continuer? (o/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Oo]$ ]]; then
    log_info "Op√©ration annul√©e"
    exit 0
fi

echo ""
log_info "Pr√©remplissage de la base de donn√©es..."
echo ""

# Ex√©cuter le script SQL adapt√©
docker exec -i rirepair-postgres psql -U rirepair_user -d rirepair < database/seed-data-adapted.sql

if [ $? -eq 0 ]; then
    echo ""
    log_success "‚ú® Base de donn√©es pr√©remplie avec succ√®s !"
    echo ""
    
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${CYAN}üìä Donn√©es ajout√©es:${NC}"
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    
    # Afficher les statistiques
    docker exec -i rirepair-postgres psql -U rirepair_user -d rirepair -c "
    SELECT 
      'Types d''appareils' as \"Type de donn√©es\", 
      COUNT(*)::text as \"Nombre\" 
    FROM device_types
    UNION ALL
    SELECT 'Marques', COUNT(*)::text FROM brands
    UNION ALL
    SELECT 'Mod√®les', COUNT(*)::text FROM models
    UNION ALL
    SELECT 'Services de r√©paration', COUNT(*)::text FROM repair_services
    UNION ALL
    SELECT 'Rendez-vous', COUNT(*)::text FROM appointments
    UNION ALL
    SELECT 'Cr√©neaux horaires', COUNT(*)::text FROM schedule_slots;
    "
    
    echo ""
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${CYAN}üì± Exemples de donn√©es:${NC}"
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    echo -e "${GREEN}Types d'appareils:${NC}"
    echo "  ‚Ä¢ Smartphone"
    echo "  ‚Ä¢ Tablette"
    echo "  ‚Ä¢ Ordinateur Portable"
    echo "  ‚Ä¢ Ordinateur Fixe"
    echo "  ‚Ä¢ Montre Connect√©e"
    echo "  ‚Ä¢ Console de Jeu"
    echo ""
    echo -e "${GREEN}Marques populaires:${NC}"
    echo "  ‚Ä¢ Apple (iPhone, iPad, MacBook, Apple Watch)"
    echo "  ‚Ä¢ Samsung (Galaxy, Galaxy Tab)"
    echo "  ‚Ä¢ Huawei, Xiaomi, OnePlus, Google"
    echo "  ‚Ä¢ Dell, HP, Lenovo"
    echo "  ‚Ä¢ Sony, Microsoft, Nintendo"
    echo ""
    echo -e "${GREEN}Services de r√©paration:${NC}"
    echo "  ‚Ä¢ Remplacement √âcran (149,99‚Ç¨)"
    echo "  ‚Ä¢ Remplacement Batterie (79,99‚Ç¨)"
    echo "  ‚Ä¢ R√©paration Port de Charge (69,99‚Ç¨)"
    echo "  ‚Ä¢ Remplacement Cam√©ra (99,99‚Ç¨)"
    echo "  ‚Ä¢ Traitement D√©g√¢ts des Eaux (89,99‚Ç¨)"
    echo "  ‚Ä¢ Et plus encore..."
    echo ""
    echo -e "${GREEN}Rendez-vous de test:${NC}"
    echo "  ‚Ä¢ 8 rendez-vous cr√©√©s"
    echo "  ‚Ä¢ Statuts: pending, confirmed, completed"
    echo "  ‚Ä¢ Dates: pass√©es et futures"
    echo ""
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${CYAN}üéØ Prochaines √©tapes:${NC}"
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo ""
    echo "1. Acc√©dez √† l'interface admin:"
    echo -e "   ${GREEN}http://13.62.55.143:3000/admin/login${NC}"
    echo ""
    echo "2. Connectez-vous avec:"
    echo -e "   Username: ${YELLOW}admin${NC}"
    echo -e "   Password: ${YELLOW}admin123${NC}"
    echo ""
    echo "3. Explorez les donn√©es:"
    echo "   ‚Ä¢ Tableau de bord: statistiques"
    echo "   ‚Ä¢ Rendez-vous: liste des RDV"
    echo "   ‚Ä¢ Calendrier: vue calendrier"
    echo "   ‚Ä¢ Param√®tres: changez vos identifiants"
    echo ""
    echo "4. Testez la prise de rendez-vous:"
    echo -e "   ${GREEN}http://13.62.55.143:3000/booking${NC}"
    echo ""
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    
else
    echo ""
    log_error "Erreur lors du pr√©remplissage de la base de donn√©es"
    log_info "V√©rifiez les logs pour plus de d√©tails"
    exit 1
fi

echo ""
log_success "üéâ Pr√©remplissage termin√© avec succ√®s !"
echo ""
